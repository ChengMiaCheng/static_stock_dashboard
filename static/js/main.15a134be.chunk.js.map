{"version":3,"sources":["components/Header.js","components/Footer.js","config/config.js","services/StockCurrPrice.js","services/StockPerformance.js","services/StockPositions.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Footer","href","iex","stockPositionTable_columns","dataField","text","stockHistoricalChart_rangeOptions","CurrentPrice","props","symbol","isIncreased","currPrice","StockCurrPrice","url_price","useState","setCurrPrice","useEffect","a","axios","result","data","fetchData","prePrice","StockPerformance","getRangeDataField","ret","map","rangeOpt","state","loadingChartData","chartData","range","this","fetchChartData","url_chartData","console","log","fetch","response_chartData","status","json","setState","selectedRange","index","onClick","e","updateChart","target","innerText","StockLineChart","priceArr","d","close","labels","label","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","options","title","display","legend","StockPositions","loading","stocks","url","list_type","response","name","StockTable","numFetchedStocks","length","key","slice","keyField","columns","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAaeA,G,MAVf,uKAEI,OACE,wBAAQC,UAAU,aAAlB,SACE,sDAJR,GAA4BC,cCmBbC,EAnBf,uKAEI,OACE,yBAAQF,UAAU,aAAlB,UACE,6DACA,yCAEE,mBACEA,UAAU,kBACVG,KAAK,+CAFP,gCAPV,GAA4BF,a,gCCHfG,EACA,uCADAA,EAED,qCAICC,EAA6B,CACxC,CACEC,UAAW,SACXC,KAAM,UAER,CACED,UAAW,cACXC,KAAM,gBAER,CACED,UAAW,cACXC,KAAM,iBAIGC,EAAoC,CAC/C,CACEF,UAAW,KACXC,KAAM,YAER,CACED,UAAW,KACXC,KAAM,MAER,CACED,UAAW,MACXC,KAAM,Q,iBCRJE,EAAe,SAACC,GAAW,IACvBC,EAAmCD,EAAnCC,OAAQC,EAA2BF,EAA3BE,YAAaC,EAAcH,EAAdG,UAE7B,IAAID,EAOF,OACE,sBAAKZ,UAAU,iBAAf,UACE,8BAAMW,IACN,kDAAqBE,KACrB,qBAAKb,UAAU,mBAKRc,EAvCQ,SAACJ,GAAW,IACzBC,EAAWD,EAAXC,OACFI,EAAS,UAAMX,EAAN,kBAA4BO,EAA5B,oCAA8DP,GAF7C,EAGEY,mBAAS,GAHX,mBAGzBH,EAHyB,KAGdI,EAHc,KAehC,OAVAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACKC,IAAML,GADX,OACVM,EADU,OAGhBJ,EAAaI,EAAOC,MAHJ,2CAAH,qDAMfC,KACC,CAACR,IAGF,cAAC,EAAD,CAAcJ,OAAQA,EAAQa,SAZhB,KAYqCX,UAAWA,K,QChBrDY,EAAb,kDACE,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IA2BRgB,kBAAoB,SAAChB,GACnB,IAAIiB,EAAM,KAQV,OANAnB,EAAkCoB,KAAI,SAACC,GAIrC,OAHIA,EAAStB,OAASG,IACpBiB,EAAME,EAASvB,WAEVqB,KAEFA,GAnCP,EAAKG,MAAQ,CACXC,kBAAkB,EAClBC,UAAW,KACXC,MAAOzB,EAAkC,GAAGF,WAL7B,EADrB,0LAWU4B,KAAKC,iBAXf,wQAeUC,EAfV,6CAegEhC,EAfhE,kBAesF8B,KAAKxB,MAAMC,OAfjG,kBAeiHuB,KAAKJ,MAAMG,MAf5H,kBAe2I7B,GACvIiC,QAAQC,IAAI,yBAA0BF,GAhB1C,SAiBqCG,MAAMH,GAjB3C,UAmBsC,OAF5BI,EAjBV,QAmB2BC,OAnB3B,iCAoB8BD,EAAmBE,OApBjD,OAoBYV,EApBZ,OAsBME,KAAKS,SAAS,CACZX,UAAWA,EACXD,kBAAkB,IAxB1B,kLAyCoBrB,GAzCpB,2EA0CUkC,EAAgBV,KAAKR,kBAAkBhB,EAAMkC,kBAE7BV,KAAKJ,MAAMG,MA5CrC,gBA6CMI,QAAQC,IAAR,0BACqBM,EADrB,2CACqEV,KAAKJ,MAAMG,MADhF,kBA7CN,uCAiDYC,KAAKS,SAAS,CAAEV,MAAOW,IAjDnC,uBAkDYV,KAAKC,iBAlDjB,OAmDME,QAAQC,IAAR,sCAA2CJ,KAAKJ,MAAMG,QAnD5D,uIAuDY,IAAD,OACP,OAAIC,KAAKJ,MAAMC,iBACN,oEAGJG,KAAKJ,MAAME,UAKd,gCACE,qBAAKhC,UAAU,iBAAf,SACGQ,EAAkCoB,KAAI,SAACK,EAAOY,GAC7C,OACE,qBAEE7C,UAAU,SACV8C,QAAS,SAACC,GACR,EAAKC,YAAY,CAAEJ,cAAeG,EAAEE,OAAOC,aAJ/C,SAOGjB,EAAM1B,MANFsC,QAYb,cAAC,EAAD,CAAgBvB,KAAMY,KAAKJ,MAAME,eArB5B,+EA7Db,GAAsC/B,aAuFhCkD,EAAiB,SAACzC,GAAW,IACzBY,EAASZ,EAATY,KAEF8B,EAAW9B,EAAKM,KAAI,SAACyB,GAAD,OAAOA,EAAEC,SAE7BtB,EAAY,CAChBuB,OAFejC,EAAKM,KAAI,SAACyB,GAAD,OAAOA,EAAEG,SAGjCC,SAAU,CACR,CACEnC,KAAM8B,EACNM,MAAM,EACNC,YAAa,GACbC,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,KAInB,OACE,8BACE,cAAC,OAAD,CACExC,KAAMU,EACN+B,QAAS,CACPC,MAAO,CACLzD,KAAM,0BACN0D,SAAS,GAEXC,OAAQ,CACND,SAAS,SAQNxC,I,iBCpHF0C,EAAb,kDACE,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,MAAQ,CACXsC,SAAS,EACTC,OAAQ,IAJO,EADrB,2LAUUC,EAVV,6CAUsDlE,EAVtD,8BAUwF8B,KAAKxB,MAAM6D,UAVnG,kBAUsHnE,GAVtH,SAY2BmC,MAAM+B,GAZjC,UAa4B,OADlBE,EAZV,QAaiB/B,OAbjB,gCAcyB+B,EAAS9B,OAdlC,OAcYpB,EAdZ,OAeMY,KAAKS,SAAS,CACZ0B,OAAQ/C,EACR8C,SAAS,IAjBjB,qIAuBI,OAAIlC,KAAKJ,MAAMsC,QACN,8CAGJlC,KAAKJ,MAAMuC,OAIT,cAAC,EAAD,CAAYI,KAAMvC,KAAKxB,MAAM+D,KAAMJ,OAAQnC,KAAKJ,MAAMuC,SAHpD,yDA5Bb,GAAoCpE,aAmC9ByE,EAAa,SAAChE,GAClB,IAAMiE,EAAmBjE,EAAM2D,OAAOO,OAChCH,EAAO/D,EAAM+D,KACbI,EAAMxE,EAA2B,GAAGC,UAE1C,GAAIqE,EAAmB,EAAG,CACxB,IAAMN,EACJM,EHhDoC,EGiDhCjE,EAAM2D,OAAOS,MAAM,EHjDa,GGkDhCpE,EAAM2D,OACZ,OACE,gCACE,4BAAII,IACJ,cAAC,IAAD,CACEM,SAAUF,EACVvD,KAAM+C,EACNW,QAAS3E,OAKf,OACE,gCACE,8BAAMoE,IACN,6DAMON,IC1CAc,G,8KAvBX,OACE,gCACE,cAAC,EAAD,IACA,sBAAKjF,UAAU,sBAAf,UACE,cAAC,EAAD,CAAmBW,OAAO,SAC1B,cAAC,EAAD,CAAmBA,OAAO,QAC1B,cAAC,EAAD,CAAmBA,OAAO,YAE5B,sBAAKX,UAAU,sBAAf,UACE,cAAC,EAAD,CAAkBW,OAAO,SACzB,cAAC,EAAD,CAAkBA,OAAO,QACzB,cAAC,EAAD,CAAkBA,OAAO,YAE3B,sBAAKX,UAAU,sBAAf,UACE,cAAC,EAAD,CAAgByE,KAAK,wBAAwBF,UAAU,YACvD,cAAC,EAAD,CAAgBE,KAAK,2BAA2BF,UAAU,cAE5D,cAAC,EAAD,W,GAnBUtE,cCGHiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.15a134be.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/style.css\";\n\nexport class Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <p>Stock Dashboard</p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"../styles/style.css\";\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"App-footer\">\n        <p>Developer: Cheng Cheng (Mia)</p>\n        <p>\n          Contact:\n          <a\n            className=\"App-footer-link\"\n            href=\"https://www.linkedin.com/in/cheng-cheng-mia/\"\n          >\n            LinkedIn\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export const iex = {\n  api_token: \"Tsk_cb53f59671fa41618b14be53f139c4ab\",\n  base_url: \"https://sandbox.iexapis.com/stable\",\n};\n\nexport const stockPositionTable_numRows = 5;\nexport const stockPositionTable_columns = [\n  {\n    dataField: \"symbol\",\n    text: \"Symbol\",\n  },\n  {\n    dataField: \"companyName\",\n    text: \"Company Name\",\n  },\n  {\n    dataField: \"latestPrice\",\n    text: \"Latest Price\",\n  },\n];\n\nexport const stockHistoricalChart_rangeOptions = [\n  {\n    dataField: \"7d\",\n    text: \"Intraday\",\n  },\n  {\n    dataField: \"1m\",\n    text: \"1m\",\n  },\n  {\n    dataField: \"ytd\",\n    text: \"YTD\",\n  },\n];\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { iex } from \"../config/config\";\nimport axios from \"axios\";\n\nconst StockCurrPrice = (props) => {\n  const { symbol } = props;\n  const url_price = `${iex.base_url}/stock/${symbol}/quote/latestPrice?token=${iex.api_token}`;\n  const [currPrice, setCurrPrice] = useState(0);\n  let prevPrice = null;\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url_price);\n\n      setCurrPrice(result.data);\n    };\n\n    fetchData();\n  }, [url_price]);\n\n  return (\n    <CurrentPrice symbol={symbol} prePrice={prevPrice} currPrice={currPrice} />\n  );\n};\n\nconst CurrentPrice = (props) => {\n  const { symbol, isIncreased, currPrice } = props;\n\n  if (isIncreased) {\n    <div className=\"grid-container\">\n      <div>{symbol}</div>\n      <div>{currPrice}</div>\n      <div className=\"arrow-up\" />\n    </div>;\n  } else {\n    return (\n      <div className=\"grid-container\">\n        <div>{symbol}</div>\n        <div>Current Price: {currPrice}</div>\n        <div className=\"arrow-down\" />\n      </div>\n    );\n  }\n};\nexport default StockCurrPrice;\n","import React, { Component } from \"react\";\nimport { iex, stockHistoricalChart_rangeOptions } from \"../config/config.js\";\nimport { Line } from \"react-chartjs-2\";\n\nexport class StockPerformance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingChartData: true,\n      chartData: null,\n      range: stockHistoricalChart_rangeOptions[0].dataField,\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetchChartData();\n  }\n\n  async fetchChartData() {\n    const url_chartData = `https://api.allorigins.win/raw?url=${iex.base_url}/stock/${this.props.symbol}/chart/${this.state.range}?token=${iex.api_token}`;\n    console.log(\"Fetch chart data from:\", url_chartData);\n    const response_chartData = await fetch(url_chartData);\n\n    if (response_chartData.status === 200) {\n      const chartData = await response_chartData.json();\n\n      this.setState({\n        chartData: chartData,\n        loadingChartData: false,\n      });\n    }\n  }\n\n  getRangeDataField = (props) => {\n    var ret = null;\n\n    stockHistoricalChart_rangeOptions.map((rangeOpt) => {\n      if (rangeOpt.text === props) {\n        ret = rangeOpt.dataField;\n      }\n      return ret;\n    });\n    return ret;\n  };\n\n  async updateChart(props) {\n    const selectedRange = this.getRangeDataField(props.selectedRange);\n\n    if (selectedRange === this.state.range) {\n      console.log(\n        `selected range \"${selectedRange}\" is same as the current range \"${this.state.range}\", do nothing`\n      );\n    } else {\n      await this.setState({ range: selectedRange });\n      await this.fetchChartData();\n      console.log(`updated chart date range to ${this.state.range}`);\n    }\n  }\n\n  render() {\n    if (this.state.loadingChartData) {\n      return <div>loading historical chart data....</div>;\n    }\n\n    if (!this.state.chartData) {\n      return <div>didn't get historical stock close prices</div>;\n    }\n\n    return (\n      <div>\n        <div className=\"grid-container\">\n          {stockHistoricalChart_rangeOptions.map((range, index) => {\n            return (\n              <div\n                key={index}\n                className=\"button\"\n                onClick={(e) => {\n                  this.updateChart({ selectedRange: e.target.innerText });\n                }}\n              >\n                {range.text}\n              </div>\n            );\n          })}\n        </div>\n\n        <StockLineChart data={this.state.chartData} />\n      </div>\n    );\n  }\n}\nconst StockLineChart = (props) => {\n  const { data } = props;\n\n  const priceArr = data.map((d) => d.close);\n  const labelArr = data.map((d) => d.label);\n  const chartData = {\n    labels: labelArr,\n    datasets: [\n      {\n        data: priceArr,\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"rgba(75,192,192,1)\",\n        borderColor: \"rgba(0,0,0,1)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n  return (\n    <div>\n      <Line\n        data={chartData}\n        options={{\n          title: {\n            text: \"Historical Close Prices\",\n            display: true,\n          },\n          legend: {\n            display: false,\n          },\n        }}\n      />\n    </div>\n  );\n};\n\nexport default StockPerformance;\n","import React, { Component } from \"react\";\nimport {\n  iex,\n  stockPositionTable_numRows,\n  stockPositionTable_columns,\n} from \"../config/config.js\";\n\nimport \"../styles/style.css\";\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nexport class StockPositions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      stocks: [],\n    };\n  }\n\n  async componentDidMount() {\n    const url = `https://api.allorigins.win/raw?url=${iex.base_url}/stock/market/list/${this.props.list_type}?token=${iex.api_token}`;\n\n    const response = await fetch(url);\n    if (response.status === 200) {\n      const data = await response.json();\n      this.setState({\n        stocks: data,\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <div>loading....</div>;\n    }\n\n    if (!this.state.stocks) {\n      return <div>didn't get a stock</div>;\n    }\n\n    return <StockTable name={this.props.name} stocks={this.state.stocks} />;\n  }\n}\n\nconst StockTable = (props) => {\n  const numFetchedStocks = props.stocks.length;\n  const name = props.name;\n  const key = stockPositionTable_columns[0].dataField;\n\n  if (numFetchedStocks > 0) {\n    const stocks =\n      numFetchedStocks > stockPositionTable_numRows\n        ? props.stocks.slice(0, stockPositionTable_numRows)\n        : props.stocks;\n    return (\n      <div>\n        <p>{name}</p>\n        <BootstrapTable\n          keyField={key}\n          data={stocks}\n          columns={stockPositionTable_columns}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div>{name}</div>\n        <h3>No qualified stocks yet</h3>\n      </div>\n    );\n  }\n};\n\nexport default StockPositions;\n","import \"./styles/style.css\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport StockCurrentPrice from \"./services/StockCurrPrice\";\nimport StockPerformance from \"./services/StockPerformance\";\nimport StockPositions from \"./services/StockPositions\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"grid-container-3col\">\n          <StockCurrentPrice symbol=\"AAPL\" />\n          <StockCurrentPrice symbol=\"VIH\" />\n          <StockCurrentPrice symbol=\"GRNQ\" />\n        </div>\n        <div className=\"grid-container-3col\">\n          <StockPerformance symbol=\"AAPL\" />\n          <StockPerformance symbol=\"VIH\" />\n          <StockPerformance symbol=\"GRNQ\" />\n        </div>\n        <div className=\"grid-container-2col\">\n          <StockPositions name=\"Top 5 Performer Today\" list_type=\"gainers\" />\n          <StockPositions name=\"Bottom 5 Performer Today\" list_type=\"losers\" />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}